{"anonymous":false,"attributes":[],"bridgedResources":[],"categorizations":[],"createdAt":"2016-01-07T21:11:05.763Z","createdBy":"brian.peterson@kineticdata.com","customHeadContent":"<script type='text/javascript' src='/kinetic/app/bundles/data-viewer/request-ce-bundle-base/libraries/data-viewer/js/dataViewer.js'></script>\n\n<!-- DataTables CSS-->\n<link rel=\"stylesheet\" type=\"text/css\" href=\"/kinetic/app/thirdparty/datatableclickCallbacks/media/css/jquery.dataTables.min.css\"> \n<!--<link rel=\"stylesheet\" type=\"text/css\" href=\"/kinetic/app/thirdparty/datatables-responsive-plugin/dataTables.responsive.custom.css\">-->\n<link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.datatables.net/responsive/2.0.0/css/responsive.dataTables.min.css\">\n\n<!-- DataTables JS-->\n<script type='text/javascript' src='https://cdn.datatables.net/1.10.10/js/jquery.dataTables.min.js'></script>\n<!--<script type='text/javascript' src=\"/kinetic/app/thirdparty/datatables-responsive-plugin/dataTables.responsive.js\"></script>-->\n<script type='text/javascript' src='https://cdn.datatables.net/responsive/2.0.0/js/dataTables.responsive.min.js'></script>\n\n<style>\n    .form-group.inline {\n        display: inline;\n    }\n</style>\n\n<script>\n  \n$(document).ready(function() {  \n\n    //Bind event to Search button click\n    /*$(K('button[Search]').element()).on('click', function(){     \n        DataViewer.executeSearch(function(){ return $(K('section[Requested For]').element());}, searchConfig.personSearchBridgeTable);\n    })\n\n    //Bind event to return press in \"Requested For\" input\n    $(K('field[Requested For]').element()).keypress(function(e) {\n        if(e.which == 13) {\n            DataViewer.executeSearch(function(){ return $(K('section[Requested For]').element());}, searchConfig.personSearchBridgeTable);\n            event.preventDefault();\n        }\n    })\n\n*/\n});\nsearchConfig ={\n    // Example of full configuration of a seach object to return results as a DataTable\n    personSearchBridgeTable:{\n        resource:{\n            name: \"Sample People\",\n            //Params to be created and passed to the Bridge.  VALUE MUST BE JQUERY SELECTOR.\n            //parameters: {'Full Name': '#requested_for input','First Name': '#requested_for input','Last Name': '#requested_for input'},\n        },\n        data: [\n            { \n                title:\"<input type='checkbox' class='editor-active'>\",    \n                 defaultContent:\"<input type='checkbox' class='editor-active'>\",\n                 class:\"control hidden\",\n            },\n            { \n                defaultContent: 'static',\n                title:\"static text\",\n                class: 'hidden',\n            },\n            { \n                name: \"First Name\",\n                title:\"FIRST\",\n                class: \"all\",\n                setField:\"First Name\",\n            },\n            { \n                name: \"Last Name\",\n                title:\"Last\",\n                class: \"min-tablet\",\n                callback:function(value){\n                    console.log(value);\n                },\n                setField:\"Last Name\"\n            },\n            { \n                name: \"Email\",\n                title:\"EMAIL\",\n                class: \"min-phone\",\n                setField:\"Email\",\n            },\n            { \n                name: \"Login Id\",\n                title:\"LOGIN\",\n                class: \"none\",\n                setField:\"Login Id\"\n            },\n            { \n                name: \"Phone Number\",\n                title:\"PHONE\",\n                class: \"hidden\",\n                setField:\"Phone Number\",\n            }\n        ],\n        resultsContainerId: 'requestedForTable',\n        before: function(configObj){ \n            \n        },\n        success: function (configObj){\n            \n            console.log(this);\n        },\n        successEmpty: function(configObj){\n            //Show Empty Table\n            //DataViewer.Renderers.DataTables(configObj.destination, configObj);\n            console.log(this);\n        },\n        error: function(configObj){\n            \n            console.log(this);\n        },\n        complete: function(configObj){\n            \n            console.log(this);\n        },\n        // Executes on click of element with class of select\n        clickCallback: function(element, results){\n        },\n        removeOnClick: false,\n        renderer: {\n            type: DataViewer.Renderers.UnorderedList,\n            /*type: DataViewer.Renderers.DataTables,*/  // Passing a function here allows for better customization\n            options: {\n                // Options for Reneder\n                processSingleResult: false,\n                // DataTable OPTIONS; Passing options here make it clear that they are being passed to data tables\n                // responsive: OPTIONAL Default for \"BridgeDataTable\" is true but can be over written.\n                responsive: false,\n            }\n        },       \n    },\n}\n</script>\n\n","description":"Data Viewer Development CE","name":"Data Viewer- Add to List","notes":"","pages":[{"advanceCondition":null,"displayCondition":null,"displayPage":null,"elements":[{"type":"section","renderType":null,"name":"Requested For Details","title":null,"visible":true,"omitWhenHidden":null,"renderAttributes":{},"elements":[{"type":"content","renderType":"html","name":"Instructions","text":"<h2>Instructions</h2>\n<p>Fill in the fields below, then press the \"Add\" button to add the information to the table.</p>\n<p>When the request is submitted the data will be converted to JSON and saved into the \"Results JSON\" field.</p>","visible":true,"renderAttributes":{}},{"type":"field","name":"First Name","label":"First Name","key":"f4","defaultValue":null,"defaultResourceName":null,"visible":true,"enabled":true,"required":false,"requiredMessage":null,"omitWhenHidden":null,"pattern":null,"constraints":[],"events":[],"renderAttributes":{},"dataType":"string","renderType":"text","rows":1},{"type":"field","name":"Last Name","label":"Last Name","key":"f1","defaultValue":null,"defaultResourceName":null,"visible":true,"enabled":true,"required":false,"requiredMessage":null,"omitWhenHidden":null,"pattern":null,"constraints":[],"events":[],"renderAttributes":{},"dataType":"string","renderType":"text","rows":1},{"type":"field","name":"Phone Number","label":"Phone Number","key":"f5","defaultValue":null,"defaultResourceName":null,"visible":true,"enabled":true,"required":false,"requiredMessage":null,"omitWhenHidden":null,"pattern":null,"constraints":[],"events":[],"renderAttributes":{},"dataType":"string","renderType":"text","rows":1},{"type":"field","name":"Email","label":"Email","key":"f6","defaultValue":null,"defaultResourceName":null,"visible":true,"enabled":true,"required":false,"requiredMessage":null,"omitWhenHidden":null,"pattern":null,"constraints":[],"events":[],"renderAttributes":{},"dataType":"string","renderType":"text","rows":1},{"type":"field","name":"Login Id","label":"Login Id","key":"f7","defaultValue":null,"defaultResourceName":null,"omitWhenHidden":null,"visible":true,"enabled":true,"required":false,"requiredMessage":null,"pattern":null,"constraints":[],"events":[],"renderAttributes":{},"dataType":"string","renderType":"text","rows":1},{"type":"button","label":"Add","name":"Add","visible":true,"enabled":true,"renderType":"custom","events":[{"name":"renderFieldResults","type":"Click","action":"Custom","code":"DataViewer.renderFieldValues(function(){ return $(K('section[Results Section]').element());}, searchConfig.personSearchBridgeTable);\n"}],"renderAttributes":{"class":"inline"}}]},{"type":"section","name":"Results Section","title":null,"visible":true,"renderAttributes":{},"elements":[],"renderType":null,"omitWhenHidden":null},{"type":"section","name":"JSON Results Section","title":null,"visible":true,"renderAttributes":{},"elements":[{"type":"field","name":"Results JSON","label":"Results JSON","key":"f8","defaultValue":null,"defaultResourceName":null,"visible":true,"enabled":true,"required":false,"requiredMessage":null,"pattern":null,"constraints":[],"events":[],"renderAttributes":{},"dataType":"string","renderType":"text","rows":10,"omitWhenHidden":null}],"renderType":null,"omitWhenHidden":null},{"type":"button","label":"Submit","name":"Submit Button","visible":true,"enabled":true,"renderType":"submit-page","renderAttributes":{}}],"events":[{"name":"Set Results JSON","type":"Submit","action":"Custom","mappings":[{"field":"Results JSON","value":"searchConfig.personSearchBridgeTable.response"}],"code":"// Set Table Results into \"Results JSON\" field\nK('field[Results JSON]').value(JSON.stringify($('#requestedForTable').UnorderedList().data()))"}],"name":"Page 1","renderType":"submittable","type":"page"},{"advanceCondition":null,"displayCondition":null,"displayPage":null,"elements":[{"type":"section","name":"Results Section 2","title":null,"visible":true,"renderAttributes":{},"elements":[],"renderType":null,"omitWhenHidden":null},{"type":"button","label":"Submit","name":"Submit Button","visible":true,"enabled":true,"renderType":"submit-page","renderAttributes":{}}],"events":[{"name":"Display Table","type":"Load","action":"Custom","code":"searchConfig.personSearchBridgeTable.response = JSON.parse(K('submission').value('Results JSON'));\nDataViewer.renderResults(function(){ return $(K('section[Results Section 2]').element());}, searchConfig.personSearchBridgeTable);"}],"name":"Page 2","renderType":"submittable","type":"page"}],"securityPolicies":[],"slug":"data-viewer-add-to-list","status":"New","submissionLabelExpression":"","type":"Service","updatedAt":"2016-09-14T15:45:19.983Z","updatedBy":"bpeterson"}